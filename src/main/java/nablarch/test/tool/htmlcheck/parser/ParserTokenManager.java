/* Generated By:JJTree&JavaCC: Do not edit this line. ParserTokenManager.java */
package nablarch.test.tool.htmlcheck.parser;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2, long active3, long active4)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x100000L) != 0L)
            return 519;
         if ((active0 & 0x5b6db6aa60000008L) != 0L || (active1 & 0xdb6db6db6db6daabL) != 0L || (active2 & 0xdb6db6db6d6d6db6L) != 0L || (active3 & 0x6db6db6db6db6db6L) != 0L || (active4 & 0x16db6d6dbL) != 0L)
            return 49;
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 19;
            return 16;
         }
         return -1;
      case 1:
         if ((active1 & 0x100000001L) != 0L || (active3 & 0x12000000000L) != 0L || (active4 & 0x104000000L) != 0L)
            return 140;
         if ((active2 & 0x400L) != 0L)
            return 247;
         if ((active0 & 0x4100000000000L) != 0L || (active2 & 0x4800000000000000L) != 0L || (active3 & 0x80000410412400L) != 0L)
            return 94;
         if ((active0 & 0x4100000200000000L) != 0L || (active1 & 0x880L) != 0L || (active2 & 0x20000000000080L) != 0L || (active3 & 0x80000000080L) != 0L)
            return 63;
         if ((active0 & 0x800000000000000L) != 0L || (active2 & 0x2000L) != 0L || (active4 & 0x1208L) != 0L)
            return 124;
         if ((active3 & 0x2000000000000L) != 0L)
            return 409;
         if ((active1 & 0x4000000000L) != 0L || (active2 & 0x100000000000000L) != 0L)
            return 193;
         if ((active0 & 0x20000020000000L) != 0L || (active1 & 0x24924020L) != 0L)
            return 58;
         if ((active0 & 0x8L) != 0L)
            return 48;
         if ((active2 & 0x801200010L) != 0L || (active3 & 0x10000080000000L) != 0L)
            return 233;
         if ((active1 & 0x4000000800000008L) != 0L)
            return 146;
         if ((active0 & 0x800000000L) != 0L || (active1 & 0x800000000000000L) != 0L || (active4 & 0x20000000L) != 0L)
            return 68;
         if ((active1 & 0x20000000000L) != 0L || (active3 & 0x2400000000000000L) != 0L || (active4 & 0x100000L) != 0L)
            return 196;
         if ((active0 & 0x20000000000L) != 0L || (active2 & 0x924124040000L) != 0L || (active4 & 0x1L) != 0L)
            return 87;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x800000000000L) != 0L || (active4 & 0x800040L) != 0L)
            return 81;
         if ((active3 & 0x80000L) != 0L)
            return 357;
         if ((active1 & 0x124100000000000L) != 0L || (active2 & 0x2L) != 0L || (active3 & 0x2000002L) != 0L)
            return 199;
         if ((active3 & 0x400000000000L) != 0L)
            return 405;
         if ((active0 & 0x2000000000L) != 0L || (active1 & 0x200L) != 0L || (active2 & 0x4000000010000L) != 0L || (active3 & 0x10L) != 0L || (active4 & 0x20000L) != 0L)
            return 76;
         if ((active0 & 0x800000000000L) != 0L || (active4 & 0x4000L) != 0L)
            return 103;
         return -1;
      case 2:
         if ((active3 & 0x80000000000000L) != 0L)
            return 420;
         if ((active1 & 0x80L) != 0L)
            return 152;
         if ((active0 & 0x4000000000000L) != 0L || (active2 & 0x800000000000000L) != 0L || (active3 & 0x400000L) != 0L)
            return 108;
         if ((active1 & 0x100000L) != 0L)
            return 172;
         if ((active3 & 0x2000000000000L) != 0L)
            return 407;
         if ((active1 & 0x1L) != 0L)
            return 139;
         if ((active4 & 0x20000L) != 0L)
            return 492;
         if ((active3 & 0x80L) != 0L)
            return 339;
         if ((active0 & 0x800000000000000L) != 0L || (active2 & 0x2000L) != 0L)
            return 123;
         if ((active0 & 0x4000000200000000L) != 0L)
            return 62;
         if ((active4 & 0x100000L) != 0L)
            return 499;
         if ((active3 & 0x400000000000L) != 0L)
            return 403;
         if ((active1 & 0x100000000000000L) != 0L || (active2 & 0x2L) != 0L)
            return 211;
         if ((active3 & 0x80000000000L) != 0L)
            return 399;
         if ((active3 & 0x2000000L) != 0L)
            return 367;
         if ((active2 & 0x10000L) != 0L || (active3 & 0x10L) != 0L)
            return 256;
         if ((active2 & 0x80L) != 0L)
            return 243;
         if ((active0 & 0x20000000000L) != 0L)
            return 86;
         if ((active1 & 0x800000L) != 0L)
            return 175;
         if ((active2 & 0x100000000000L) != 0L)
            return 311;
         if ((active0 & 0x800000000000L) != 0L || (active4 & 0x4000L) != 0L)
            return 102;
         if ((active3 & 0x2L) != 0L)
            return 331;
         if ((active3 & 0x400000000L) != 0L)
            return 383;
         if ((active0 & 0x100000000000000L) != 0L)
            return 118;
         if ((active3 & 0x2400000000000000L) != 0L)
            return 429;
         if ((active1 & 0x4000000000000L) != 0L)
            return 206;
         if ((active2 & 0x20020000000L) != 0L)
            return 287;
         if ((active3 & 0x80000L) != 0L)
            return 358;
         if ((active0 & 0x20000000L) != 0L)
            return 57;
         if ((active1 & 0x4000000L) != 0L)
            return 178;
         if ((active3 & 0x400L) != 0L)
            return 346;
         if ((active2 & 0x800000000000L) != 0L)
            return 314;
         if ((active1 & 0x4000L) != 0L)
            return 166;
         if ((active4 & 0x8L) != 0L)
            return 454;
         if ((active1 & 0x200L) != 0L)
            return 154;
         if ((active1 & 0x20000000000000L) != 0L)
            return 209;
         if ((active4 & 0x20000000L) != 0L)
            return 510;
         if ((active3 & 0x12000L) != 0L)
            return 349;
         if ((active2 & 0x40000L) != 0L)
            return 262;
         if ((active1 & 0x800L) != 0L)
            return 162;
         if ((active1 & 0x4000000000L) != 0L)
            return 194;
         if ((active0 & 0x100000000000L) != 0L)
            return 93;
         if ((active1 & 0x20L) != 0L)
            return 149;
         if ((active1 & 0x20000L) != 0L)
            return 169;
         if ((active2 & 0x4000000000L) != 0L)
            return 305;
         if ((active4 & 0x800000L) != 0L)
            return 505;
         if ((active4 & 0x1L) != 0L)
            return 445;
         if ((active3 & 0x10000000000000L) != 0L)
            return 413;
         if ((active0 & 0x20000000000000L) != 0L)
            return 113;
         if ((active1 & 0x8L) != 0L)
            return 145;
         if ((active4 & 0x1200L) != 0L)
            return 470;
         if ((active1 & 0x20000000000L) != 0L)
            return 197;
         if ((active2 & 0x800000000L) != 0L)
            return 301;
         if ((active0 & 0x800000000L) != 0L || (active1 & 0x800000000000000L) != 0L)
            return 67;
         if ((active0 & 0x8000000000L) != 0L || (active1 & 0x800000000000L) != 0L)
            return 80;
         if ((active3 & 0x10000000L) != 0L)
            return 373;
         if ((active2 & 0x100000000L) != 0L)
            return 293;
         if ((active4 & 0x40L) != 0L)
            return 461;
         if ((active2 & 0x4000000L) != 0L)
            return 281;
         if ((active1 & 0x20000000L) != 0L)
            return 181;
         if ((active4 & 0x100000000L) != 0L)
            return 516;
         if ((active2 & 0x1200000L) != 0L || (active3 & 0x80000000L) != 0L)
            return 271;
         if ((active1 & 0x100000000L) != 0L)
            return 188;
         if ((active3 & 0x2000000000L) != 0L)
            return 388;
         if ((active2 & 0x10L) != 0L)
            return 232;
         if ((active0 & 0x2000000000L) != 0L)
            return 75;
         if ((active1 & 0x100000000000L) != 0L)
            return 200;
         if ((active3 & 0x10000000000L) != 0L)
            return 396;
         if ((active1 & 0x4000000000000000L) != 0L)
            return 220;
         return -1;
      case 3:
         if ((active4 & 0x4000L) != 0L)
            return 484;
         if ((active3 & 0x80000000000000L) != 0L)
            return 419;
         if ((active3 & 0x80L) != 0L)
            return 340;
         if ((active2 & 0x100000000L) != 0L)
            return 292;
         if ((active0 & 0x4000000000000L) != 0L)
            return 107;
         if ((active4 & 0x40L) != 0L)
            return 460;
         if ((active2 & 0x4000000L) != 0L)
            return 280;
         if ((active1 & 0x800000000000000L) != 0L)
            return 215;
         if ((active0 & 0x8000000000L) != 0L)
            return 78;
         if ((active2 & 0x10000L) != 0L)
            return 255;
         if ((active1 & 0x100000000L) != 0L)
            return 187;
         if ((active1 & 0x200L) != 0L)
            return 155;
         if ((active3 & 0x10000000000000L) != 0L)
            return 411;
         if ((active0 & 0x20000000000000L) != 0L)
            return 111;
         if ((active4 & 0x20000000L) != 0L)
            return 511;
         if ((active2 & 0x10L) != 0L)
            return 231;
         if ((active0 & 0x2000000000L) != 0L)
            return 74;
         if ((active3 & 0x10000000000L) != 0L)
            return 395;
         if ((active3 & 0x10000000L) != 0L)
            return 371;
         if ((active2 & 0x800000000000000L) != 0L || (active3 & 0x400000L) != 0L)
            return 325;
         if ((active1 & 0x1L) != 0L)
            return 138;
         if ((active4 & 0x20000L) != 0L)
            return 491;
         if ((active4 & 0x1200L) != 0L)
            return 469;
         if ((active3 & 0x2400000000000000L) != 0L)
            return 428;
         if ((active4 & 0x100000000L) != 0L)
            return 514;
         if ((active4 & 0x100000L) != 0L)
            return 498;
         if ((active0 & 0x800000000L) != 0L)
            return 65;
         if ((active2 & 0x20000000L) != 0L)
            return 286;
         if ((active3 & 0x2000000000L) != 0L)
            return 386;
         if ((active3 & 0x10000L) != 0L)
            return 354;
         if ((active2 & 0x80L) != 0L)
            return 242;
         if ((active0 & 0x20000000000L) != 0L)
            return 85;
         if ((active3 & 0x2000L) != 0L)
            return 350;
         if ((active2 & 0x2L) != 0L)
            return 225;
         if ((active3 & 0x400L) != 0L)
            return 345;
         if ((active0 & 0x800000000000L) != 0L)
            return 101;
         if ((active1 & 0x4000000000000000L) != 0L)
            return 221;
         if ((active4 & 0x8L) != 0L)
            return 453;
         if ((active0 & 0x800000000000000L) != 0L)
            return 121;
         if ((active3 & 0x2000000000000L) != 0L)
            return 408;
         if ((active2 & 0x40000L) != 0L)
            return 261;
         if ((active1 & 0x800L) != 0L)
            return 161;
         if ((active0 & 0x100000000000L) != 0L)
            return 92;
         if ((active3 & 0x400000000L) != 0L)
            return 381;
         if ((active2 & 0x2000L) != 0L)
            return 248;
         if ((active0 & 0x100000000000000L) != 0L)
            return 116;
         if ((active3 & 0x400000000000L) != 0L)
            return 404;
         if ((active3 & 0x2000000L) != 0L)
            return 368;
         if ((active3 & 0x10L) != 0L)
            return 336;
         if ((active4 & 0x800000L) != 0L)
            return 504;
         if ((active2 & 0x1200000L) != 0L)
            return 270;
         if ((active1 & 0x100000000000000L) != 0L)
            return 212;
         if ((active0 & 0x20000000L) != 0L)
            return 55;
         if ((active4 & 0x1L) != 0L)
            return 444;
         if ((active1 & 0x8L) != 0L)
            return 144;
         if ((active3 & 0x80000000L) != 0L)
            return 376;
         if ((active3 & 0x80000000000L) != 0L)
            return 400;
         if ((active0 & 0x4000000200000000L) != 0L)
            return 60;
         if ((active2 & 0x800000000L) != 0L)
            return 300;
         if ((active3 & 0x2L) != 0L)
            return 332;
         return -1;
      case 4:
         if ((active4 & 0x8L) != 0L)
            return 452;
         if ((active0 & 0x20000000000L) != 0L)
            return 83;
         if ((active3 & 0x10000000L) != 0L)
            return 372;
         if ((active1 & 0x800L) != 0L)
            return 160;
         if ((active2 & 0x40000L) != 0L)
            return 259;
         if ((active4 & 0x40L) != 0L)
            return 459;
         if ((active3 & 0x400000000000000L) != 0L)
            return 427;
         if ((active0 & 0x100000000000L) != 0L)
            return 91;
         if ((active4 & 0x100000000L) != 0L)
            return 515;
         if ((active2 & 0x800000000L) != 0L)
            return 299;
         if ((active0 & 0x800000000L) != 0L)
            return 66;
         if ((active3 & 0x2000000000L) != 0L)
            return 387;
         if ((active4 & 0x1L) != 0L)
            return 443;
         if ((active3 & 0x400L) != 0L)
            return 343;
         if ((active4 & 0x4000L) != 0L)
            return 483;
         if ((active3 & 0x80000000000000L) != 0L)
            return 418;
         if ((active2 & 0x4000000L) != 0L)
            return 278;
         if ((active3 & 0x2000000000000000L) != 0L)
            return 434;
         if ((active4 & 0x800000L) != 0L)
            return 502;
         if ((active0 & 0x800000000000000L) != 0L)
            return 122;
         if ((active0 & 0x4000000200000000L) != 0L)
            return 130;
         if ((active1 & 0x100000000L) != 0L)
            return 186;
         if ((active1 & 0x8L) != 0L)
            return 142;
         if ((active2 & 0x10L) != 0L)
            return 230;
         if ((active0 & 0x2000000000L) != 0L)
            return 73;
         if ((active3 & 0x400000L) != 0L)
            return 362;
         if ((active3 & 0x10000000000L) != 0L)
            return 394;
         if ((active2 & 0x2000L) != 0L)
            return 249;
         if ((active3 & 0x400000000L) != 0L)
            return 382;
         if ((active0 & 0x100000000000000L) != 0L)
            return 117;
         if ((active2 & 0x200000L) != 0L)
            return 269;
         if ((active2 & 0x100000000L) != 0L)
            return 290;
         if ((active0 & 0x4000000000000L) != 0L)
            return 105;
         if ((active1 & 0x1L) != 0L)
            return 137;
         if ((active4 & 0x20000L) != 0L)
            return 490;
         if ((active0 & 0x20000000L) != 0L)
            return 56;
         if ((active3 & 0x80000000L) != 0L)
            return 377;
         if ((active4 & 0x100000L) != 0L)
            return 497;
         if ((active2 & 0x10000L) != 0L)
            return 253;
         if ((active4 & 0x1200L) != 0L)
            return 468;
         if ((active2 & 0x80L) != 0L)
            return 241;
         if ((active1 & 0x800000000000000L) != 0L)
            return 216;
         if ((active0 & 0x8000000000L) != 0L)
            return 79;
         if ((active2 & 0x800000000000000L) != 0L)
            return 324;
         if ((active3 & 0x10000000000000L) != 0L)
            return 412;
         if ((active0 & 0x20000000000000L) != 0L)
            return 112;
         if ((active0 & 0x800000000000L) != 0L)
            return 100;
         if ((active2 & 0x20000000L) != 0L)
            return 284;
         return -1;
      case 5:
         if ((active2 & 0x200000L) != 0L)
            return 268;
         if ((active0 & 0x2000000000L) != 0L)
            return 72;
         if ((active0 & 0x4000000000000L) != 0L)
            return 106;
         if ((active2 & 0x100000000L) != 0L)
            return 291;
         if ((active2 & 0x40000L) != 0L)
            return 260;
         if ((active0 & 0x4000000000000000L) != 0L)
            return 129;
         if ((active2 & 0x800000000000000L) != 0L)
            return 322;
         if ((active4 & 0x1200L) != 0L)
            return 467;
         if ((active3 & 0x2000000000000000L) != 0L)
            return 432;
         if ((active2 & 0x800000000L) != 0L)
            return 298;
         if ((active4 & 0x1L) != 0L)
            return 442;
         if ((active0 & 0x20000000000L) != 0L)
            return 84;
         if ((active2 & 0x10000L) != 0L)
            return 254;
         if ((active2 & 0x20000000L) != 0L)
            return 285;
         if ((active1 & 0x100000000L) != 0L)
            return 185;
         if ((active3 & 0x400000L) != 0L)
            return 360;
         if ((active3 & 0x80000000000000L) != 0L)
            return 416;
         if ((active0 & 0x100000000000L) != 0L)
            return 89;
         if ((active2 & 0x10L) != 0L)
            return 228;
         if ((active4 & 0x20000L) != 0L)
            return 488;
         if ((active4 & 0x40L) != 0L)
            return 457;
         if ((active3 & 0x400000000000000L) != 0L)
            return 426;
         if ((active0 & 0x800000000000L) != 0L)
            return 99;
         if ((active3 & 0x400L) != 0L)
            return 344;
         if ((active3 & 0x10000000000L) != 0L)
            return 393;
         if ((active1 & 0x8L) != 0L)
            return 143;
         if ((active2 & 0x4000000L) != 0L)
            return 279;
         if ((active2 & 0x80L) != 0L)
            return 240;
         if ((active1 & 0x1L) != 0L)
            return 135;
         if ((active4 & 0x100000L) != 0L)
            return 495;
         if ((active4 & 0x800000L) != 0L)
            return 503;
         if ((active4 & 0x4000L) != 0L)
            return 482;
         if ((active4 & 0x8L) != 0L)
            return 451;
         if ((active1 & 0x800L) != 0L)
            return 158;
         return -1;
      case 6:
         if ((active0 & 0x800000000000L) != 0L)
            return 98;
         if ((active3 & 0x400000000000000L) != 0L)
            return 425;
         if ((active0 & 0x100000000000L) != 0L)
            return 90;
         if ((active3 & 0x400000L) != 0L)
            return 361;
         if ((active2 & 0x10L) != 0L)
            return 229;
         if ((active3 & 0x80000000000000L) != 0L)
            return 417;
         if ((active4 & 0x200L) != 0L)
            return 466;
         if ((active2 & 0x800000000L) != 0L)
            return 296;
         if ((active1 & 0x100000000L) != 0L)
            return 183;
         if ((active4 & 0x20000L) != 0L)
            return 489;
         if ((active4 & 0x40L) != 0L)
            return 458;
         if ((active2 & 0x80L) != 0L)
            return 239;
         if ((active4 & 0x4000L) != 0L)
            return 481;
         if ((active4 & 0x8L) != 0L)
            return 450;
         if ((active2 & 0x200000L) != 0L)
            return 267;
         if ((active1 & 0x1L) != 0L)
            return 136;
         if ((active3 & 0x10000000000L) != 0L)
            return 391;
         if ((active4 & 0x100000L) != 0L)
            return 496;
         if ((active0 & 0x4000000000000000L) != 0L)
            return 128;
         if ((active1 & 0x800L) != 0L)
            return 159;
         if ((active4 & 0x1L) != 0L)
            return 441;
         if ((active0 & 0x2000000000L) != 0L)
            return 70;
         if ((active2 & 0x800000000000000L) != 0L)
            return 323;
         if ((active3 & 0x2000000000000000L) != 0L)
            return 433;
         return -1;
      case 7:
         if ((active2 & 0x800000000L) != 0L)
            return 297;
         if ((active2 & 0x80L) != 0L)
            return 238;
         if ((active4 & 0x1L) != 0L)
            return 439;
         if ((active3 & 0x10000000000L) != 0L)
            return 392;
         if ((active2 & 0x200000L) != 0L)
            return 265;
         if ((active4 & 0x4000L) != 0L)
            return 479;
         if ((active3 & 0x400000000000000L) != 0L)
            return 423;
         if ((active0 & 0x2000000000L) != 0L)
            return 71;
         if ((active4 & 0x200L) != 0L)
            return 464;
         if ((active4 & 0x8L) != 0L)
            return 448;
         if ((active1 & 0x100000000L) != 0L)
            return 184;
         if ((active0 & 0x4000000000000000L) != 0L)
            return 126;
         if ((active0 & 0x800000000000L) != 0L)
            return 96;
         return -1;
      case 8:
         if ((active2 & 0x200000L) != 0L)
            return 266;
         if ((active2 & 0x80L) != 0L)
            return 237;
         if ((active4 & 0x1L) != 0L)
            return 440;
         if ((active3 & 0x400000000000000L) != 0L)
            return 424;
         if ((active4 & 0x200L) != 0L)
            return 465;
         if ((active4 & 0x4000L) != 0L)
            return 480;
         if ((active0 & 0x4000000000000000L) != 0L)
            return 127;
         if ((active4 & 0x8L) != 0L)
            return 449;
         if ((active0 & 0x800000000000L) != 0L)
            return 97;
         return -1;
      case 9:
         if ((active2 & 0x80L) != 0L)
            return 235;
         return -1;
      case 10:
         if ((active2 & 0x80L) != 0L)
            return 236;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2, long active3, long active4)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2, active3, active4), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_0(0, 20, 519);
      case 37:
         return jjStopAtPos(0, 22);
      case 45:
         return jjStopAtPos(0, 23);
      case 47:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x0L, 0x0L, 0x0L, 0x0L);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x5b6db6aa60000008L, 0xdb6db6db6db6daabL, 0xdb6db6db6d6d6db6L, 0x6db6db6db6db6db6L, 0x16db6d6dbL);
      case 61:
         return jjStopAtPos(0, 21);
      case 62:
         return jjStopAtPos(0, 25);
      case 63:
         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L, 0x0L, 0x0L, 0x0L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2, long active3, long active4)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2, active3, active4);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x8L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 47:
         return jjMoveStringLiteralDfa2_0(active0, 0x1249240040000000L, active1, 0x9249249249249002L, active2, 0x9249249248484924L, active3, 0x4924924924924924L, active4, 0x49248492L);
      case 62:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(1, 32);
         break;
      case 65:
      case 97:
         if ((active4 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 282;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000001L, active2, 0L, active3, 0x12000000000L, active4, 0x100000000L);
      case 66:
      case 98:
         if ((active2 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 181;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x4100000200000000L, active1, 0x880L, active2, 0x80L, active3, 0x80000000080L, active4, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x801200010L, active3, 0x10000080000000L, active4, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x124100000000000L, active2, 0x2L, active3, 0x2000002L, active4, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x80000L, active4, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0L, active2, 0x2000L, active3, 0L, active4, 0x1208L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000020000000L, active1, 0x24924020L, active2, 0L, active3, 0L, active4, 0L);
      case 73:
      case 105:
         if ((active2 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 178;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000L, active1, 0x200L, active2, 0x10000L, active3, 0x10L, active4, 0x20000L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x400000000000L, active4, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000L, active1, 0x800000000000L, active2, 0L, active3, 0L, active4, 0x800040L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0x800000000000000L, active2, 0L, active3, 0L, active4, 0x20000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0x4000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000000L, active2, 0L, active3, 0x2400000000000000L, active4, 0x100000L);
      case 80:
      case 112:
         if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000000000000008L, active2, 0L, active3, 0L, active4, 0L);
      case 81:
      case 113:
         if ((active2 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(1, 138, 247);
         break;
      case 83:
      case 115:
         if ((active2 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 190;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x4100000000000L, active1, 0L, active2, 0x800000000000000L, active3, 0x80000410412400L, active4, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000L, active1, 0L, active2, 0x924124040000L, active3, 0L, active4, 0x1L);
      case 85:
      case 117:
         if ((active2 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 184;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000000000L, active2, 0L, active3, 0L, active4, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x2000000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, active2, active3, active4);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x8L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 49:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(2, 78, 166);
         break;
      case 50:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(2, 81, 169);
         break;
      case 51:
         if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(2, 84, 172);
         break;
      case 52:
         if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(2, 87, 175);
         break;
      case 53:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(2, 90, 178);
         break;
      case 54:
         if ((active1 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(2, 93, 181);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000200000000L, active1, 0x20000000aL, active2, 0x800040000L, active3, 0x2024400000000L, active4, 0x28800000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0x1000L, active2, 0x40000004000100L, active3, 0x502000000100L, active4, 0x100000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0L, active2, 0x1000400020L, active3, 0x20010100000000L, active4, 0L);
      case 68:
      case 100:
         if ((active1 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 117, 209);
         else if ((active2 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 172, 311);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x248200100000000L, active2, 0x4L, active3, 0x80004000004L, active4, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x820000000L, active1, 0x800000000000000L, active2, 0x10L, active3, 0x80000000100002L, active4, 0x41L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L, active1, 0L, active2, 0x100004000L, active3, 0x2000000L, active4, 0x20410L);
      case 72:
      case 104:
         if ((active2 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 169;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x40000040000000L, active1, 0x49248000L, active2, 0x20000000L, active3, 0L, active4, 0L);
      case 73:
      case 105:
         if ((active1 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 111;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x28000000000L, active1, 0x100000000000000L, active2, 0x8000000000002L, active3, 0x100000000000a0L, active4, 0x40008L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x800000000000L, active4, 0L);
      case 76:
      case 108:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 102, 194);
         else if ((active1 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 105, 197);
         else if ((active1 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 108, 200);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000000000000L, active2, 0x80L, active3, 0L, active4, 0x1000080L);
      case 77:
      case 109:
         if ((active3 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(2, 211, 358);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000000000000200L, active2, 0L, active3, 0x400L, active4, 0x40000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000L, active1, 0L, active2, 0x10000L, active3, 0x10L, active4, 0x8000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x900800000000000L, active1, 0x40000000000L, active2, 0x1202000L, active3, 0x4800000080000000L, active4, 0x204000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000001000000001L, active2, 0L, active3, 0x2400000010000000L, active4, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0x800L, active3, 0L, active4, 0L);
      case 82:
      case 114:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(2, 69, 149);
         else if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(2, 71, 152);
         else if ((active2 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 166, 305);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000000000000L, active2, 0L, active3, 0L, active4, 0x100001200L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x8202000000000L, active1, 0L, active2, 0x9000000000000000L, active3, 0x100000820824800L, active4, 0L);
      case 84:
      case 116:
         if ((active1 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 114, 206);
         else if ((active2 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 175, 314);
         return jjMoveStringLiteralDfa3_0(active0, 0x24040000000000L, active1, 0L, active2, 0x801248248080000L, active3, 0x400000L, active4, 0x2L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000000800L, active2, 0x200000000000000L, active3, 0x12000L, active4, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x4000000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(1, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1, active2, active3, active4);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(3, 3);
         break;
      case 49:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L, active2, 0L, active3, 0L, active4, 0L);
      case 50:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000L, active2, 0L, active3, 0L, active4, 0L);
      case 51:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000L, active2, 0L, active3, 0L, active4, 0L);
      case 52:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000L, active2, 0L, active3, 0L, active4, 0L);
      case 53:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000000L, active2, 0L, active3, 0L, active4, 0L);
      case 54:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000000L, active2, 0L, active3, 0L, active4, 0L);
      case 62:
         if ((active1 & 0x1000000000L) != 0L)
            return jjStopAtPos(3, 100);
         else if ((active2 & 0x800L) != 0L)
            return jjStopAtPos(3, 139);
         else if ((active2 & 0x8000000000000L) != 0L)
            return jjStopAtPos(3, 179);
         else if ((active2 & 0x40000000000000L) != 0L)
            return jjStopAtPos(3, 182);
         else if ((active2 & 0x200000000000000L) != 0L)
            return jjStopAtPos(3, 185);
         else if ((active2 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(3, 191);
         else if ((active4 & 0x8000000L) != 0L)
            return jjStopAtPos(3, 283);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L, active1, 0L, active2, 0x1000080000L, active3, 0x4000810000400L, active4, 0x41001200L);
      case 66:
      case 98:
         if ((active3 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(3, 205, 350);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0x8040000L, active3, 0x806000000000L, active4, 0xa00000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L, active1, 0L, active2, 0L, active3, 0x20000000000L, active4, 0L);
      case 68:
      case 100:
         if ((active3 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 238, 404);
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000000L, active1, 0x40000300000000L, active2, 0x200000000000L, active3, 0x100080000000L, active4, 0L);
      case 69:
      case 101:
         if ((active1 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 126, 221);
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000L, active1, 0x1000000000000000L, active2, 0x20000020L, active3, 0x100000000000004L, active4, 0x10000008aL);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0x200000000L, active3, 0x4000000L, active4, 0x44000L);
      case 71:
      case 103:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(3, 73, 155);
         else if ((active3 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(3, 199, 340);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x40L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0x40040000000L, active3, 0L, active4, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x42000000000L, active1, 0x201000000000000L, active2, 0x4L, active3, 0x20000000000100L, active4, 0x10L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x100000L);
      case 76:
      case 108:
         if ((active2 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 152;
            jjmatchedPos = 3;
         }
         else if ((active3 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(3, 193, 332);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x248000000000L, active2, 0x200100L, active3, 0x80000000000000L, active4, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0L, active2, 0L, active3, 0x400100800L, active4, 0L);
      case 78:
      case 110:
         if ((active3 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 217, 368);
         return jjMoveStringLiteralDfa4_0(active0, 0x800008000000000L, active1, 0x800000000000000L, active2, 0x10L, active3, 0x20L, active4, 0L);
      case 79:
      case 111:
         if ((active3 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 235, 400);
         return jjMoveStringLiteralDfa4_0(active0, 0x1201000000000000L, active1, 0L, active2, 0x104404080L, active3, 0x100000000L, active4, 0x8000L);
      case 80:
      case 112:
         if ((active3 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(3, 208, 354);
         else if ((active4 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(3, 285, 511);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x3L, active2, 0x800010000L, active3, 0x4800000020000000L, active4, 0L);
      case 82:
      case 114:
         if ((active1 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 120, 212);
         else if ((active3 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 241, 408);
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000L, active1, 0x8000000000000008L, active2, 0x800008000002000L, active3, 0x10000400000L, active4, 0x20400L);
      case 83:
      case 115:
         if ((active3 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(3, 196, 336);
         return jjMoveStringLiteralDfa4_0(active0, 0x4000800200000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x48020800000000L, active1, 0x8000000000800L, active2, 0x1001000000000000L, active3, 0x2410000000800000L, active4, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L, active2, 0L, active3, 0x24000L, active4, 0L);
      case 86:
      case 118:
         if ((active2 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(3, 129, 225);
         break;
      case 88:
      case 120:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x1L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(2, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1, active2, active3, active4);
      return 4;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x8000L) != 0L)
            return jjStopAtPos(4, 79);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(4, 82);
         else if ((active1 & 0x200000L) != 0L)
            return jjStopAtPos(4, 85);
         else if ((active1 & 0x1000000L) != 0L)
            return jjStopAtPos(4, 88);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStopAtPos(4, 91);
         else if ((active1 & 0x40000000L) != 0L)
            return jjStopAtPos(4, 94);
         else if ((active1 & 0x8000000000L) != 0L)
            return jjStopAtPos(4, 103);
         else if ((active1 & 0x40000000000L) != 0L)
            return jjStopAtPos(4, 106);
         else if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(4, 109);
         else if ((active1 & 0x1000000000000L) != 0L)
            return jjStopAtPos(4, 112);
         else if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(4, 115);
         else if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(4, 118);
         else if ((active2 & 0x8000000000L) != 0L)
            return jjStopAtPos(4, 167);
         else if ((active2 & 0x40000000000L) != 0L)
            return jjStopAtPos(4, 170);
         else if ((active2 & 0x200000000000L) != 0L)
            return jjStopAtPos(4, 173);
         else if ((active2 & 0x1000000000000L) != 0L)
            return jjStopAtPos(4, 176);
         else if ((active3 & 0x100000L) != 0L)
            return jjStopAtPos(4, 212);
         break;
      case 65:
      case 97:
         if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(4, 35, 66);
         else if ((active4 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(4, 288, 515);
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000L, active1, 0x8L, active2, 0x20000000L, active3, 0x20000800L, active4, 0x20400L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0x80000L, active3, 0x4000004000L, active4, 0x1000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000L, active1, 0L, active2, 0x80L, active3, 0L, active4, 0L);
      case 68:
      case 100:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 56);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0x200000000L, active2, 0x4000000L, active3, 0x800100000000L, active4, 0L);
      case 69:
      case 101:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 4;
         }
         else if ((active3 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(4, 223, 377);
         else if ((active3 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 244, 412);
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000000000000L, active1, 0x8000000000000000L, active2, 0x40000000L, active3, 0x80000000000000L, active4, 0x900050L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x8000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0x200000L, active3, 0x400000000000100L, active4, 0x80L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000L, active1, 0L, active2, 0x800000000000000L, active3, 0x2000000000000000L, active4, 0L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x200000L);
      case 75:
      case 107:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 39, 79);
         break;
      case 76:
      case 108:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 112);
         return jjMoveStringLiteralDfa5_0(active0, 0x4020000000000L, active1, 0x1L, active2, 0x440000L, active3, 0x100000000000404L, active4, 0x8L);
      case 77:
      case 109:
         if ((active2 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(4, 141, 249);
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L, active2, 0L, active3, 0x800000000L, active4, 0x1200L);
      case 78:
      case 110:
         if ((active3 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 220, 372);
         return jjMoveStringLiteralDfa5_0(active0, 0x1000002000000000L, active1, 0x1000000000000000L, active2, 0x20L, active3, 0x4000000L, active4, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0x308000100L, active3, 0x110000400000L, active4, 0L);
      case 80:
      case 112:
         if ((active3 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(4, 226, 382);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L, active2, 0x1000000000L, active3, 0x20000L, active4, 0x40000000L);
      case 82:
      case 114:
         if ((active3 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 229, 387);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active1, 0x200000100000000L, active2, 0x1000000000004000L, active3, 0x4020000800000L, active4, 0x44000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000000L, active1, 0L, active2, 0L, active3, 0x20L, active4, 0L);
      case 84:
      case 116:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 59, 122);
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000L, active1, 0x1800L, active2, 0x800000010L, active3, 0x4820000000000000L, active4, 0x1L);
      case 85:
      case 117:
         if ((active1 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 123, 216);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0x10000L, active3, 0L, active4, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0x4L, active3, 0L, active4, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x2L);
      case 89:
      case 121:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 56, 117);
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(3, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1, active2, active3, active4);
      return 5;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStopAtPos(5, 121);
         else if ((active1 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(5, 127);
         else if ((active2 & 0x4L) != 0L)
            return jjStopAtPos(5, 130);
         else if ((active3 & 0x4L) != 0L)
            return jjStopAtPos(5, 194);
         else if ((active3 & 0x20L) != 0L)
            return jjStopAtPos(5, 197);
         else if ((active3 & 0x100L) != 0L)
            return jjStopAtPos(5, 200);
         else if ((active3 & 0x4000L) != 0L)
            return jjStopAtPos(5, 206);
         else if ((active3 & 0x20000L) != 0L)
            return jjStopAtPos(5, 209);
         else if ((active3 & 0x4000000L) != 0L)
            return jjStopAtPos(5, 218);
         else if ((active3 & 0x100000000000L) != 0L)
            return jjStopAtPos(5, 236);
         else if ((active3 & 0x800000000000L) != 0L)
            return jjStopAtPos(5, 239);
         else if ((active3 & 0x4000000000000L) != 0L)
            return jjStopAtPos(5, 242);
         else if ((active4 & 0x40000000L) != 0L)
            return jjStopAtPos(5, 286);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active2, 0x40000000L, active3, 0L, active4, 0x44001L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000L, active1, 0L, active2, 0x100L, active3, 0x80000000000000L, active4, 0x100000L);
      case 68:
      case 100:
         if ((active2 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(5, 157, 285);
         return jjMoveStringLiteralDfa6_0(active0, 0x2040000000L, active1, 0L, active2, 0x8000000L, active3, 0L, active4, 0x8L);
      case 69:
      case 101:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 41, 84);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 50, 106);
         else if ((active2 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(5, 146, 260);
         else if ((active4 & 0x1000L) != 0L)
         {
            jjmatchedKind = 268;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x100000001L, active2, 0x10L, active3, 0x120000100000000L, active4, 0x1200280L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa6_0(active0, 0x4000000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0x800000000000000L, active4, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0L, active2, 0x1000000800000000L, active3, 0x4000000000000000L, active4, 0L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active2, 0x800000000000080L, active3, 0L, active4, 0L);
      case 76:
      case 108:
         if ((active3 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(5, 202, 344);
         else if ((active4 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(5, 279, 503);
         return jjMoveStringLiteralDfa6_0(active0, 0x48040000000000L, active1, 0x2L, active2, 0x80000L, active3, 0x800L, active4, 0x10L);
      case 77:
      case 109:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(5, 67, 143);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active2, 0x4000L, active3, 0L, active4, 0x20400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x10020400000L, active4, 0x40L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x800L, active2, 0x200000000L, active3, 0x2000020000800000L, active4, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000L, active1, 0L, active2, 0L, active3, 0x800000000L, active4, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000L, active1, 0x200000000L, active2, 0x200000L, active3, 0x400004000000000L, active4, 0x8000L);
      case 84:
      case 116:
         if ((active2 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 144, 254);
         else if ((active2 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(5, 160, 291);
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000000L, active1, 0x1000L, active2, 0x1000000020L, active3, 0L, active4, 0x2L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1000000000000000L, active2, 0L, active3, 0L, active4, 0L);
      case 89:
      case 121:
         if ((active2 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(5, 154, 279);
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(4, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1, active2, active3, active4);
      return 6;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(6, 30);
         else if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(6, 54);
         else if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(6, 57);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(6, 60);
         else if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(6, 124);
         else if ((active2 & 0x4000L) != 0L)
            return jjStopAtPos(6, 142);
         else if ((active3 & 0x20000000L) != 0L)
            return jjStopAtPos(6, 221);
         else if ((active3 & 0x100000000L) != 0L)
            return jjStopAtPos(6, 224);
         else if ((active3 & 0x800000000L) != 0L)
            return jjStopAtPos(6, 227);
         else if ((active3 & 0x4000000000L) != 0L)
            return jjStopAtPos(6, 230);
         else if ((active3 & 0x20000000000000L) != 0L)
            return jjStopAtPos(6, 245);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x8002L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x100000000000000L, active4, 0x200000L);
      case 68:
      case 100:
         if ((active4 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(6, 262, 458);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0x40000000L, active3, 0L, active4, 0x10L);
      case 69:
      case 101:
         if ((active2 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 187, 323);
         else if ((active4 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(6, 273, 489);
         return jjMoveStringLiteralDfa7_0(active0, 0x8042000000000L, active1, 0x200000002L, active2, 0x80020L, active3, 0L, active4, 0x400L);
      case 71:
      case 103:
         if ((active3 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(6, 214, 361);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000L, active1, 0L, active2, 0x1000000000L, active3, 0L, active4, 0L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0x1000000000000100L, active3, 0L, active4, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x800L, active4, 0x1000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x44000L);
      case 78:
      case 110:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(6, 75, 159);
         else if ((active3 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 253, 433);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x20000800000L, active4, 0x80L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000000000L, active1, 0x1000L, active2, 0x800200000L, active3, 0x4400000000000000L, active4, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0x80L, active3, 0L, active4, 0L);
      case 82:
      case 114:
         if ((active2 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(6, 132, 229);
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000000000L, active1, 0L, active2, 0x400000L, active3, 0x800000000000000L, active4, 0x1L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x100000000L, active2, 0L, active3, 0L, active4, 0x208L);
      case 84:
      case 116:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 44, 90);
         else if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(6, 64, 136);
         else if ((active3 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 247, 417);
         else if ((active4 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(6, 276, 496);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0x200000000L, active3, 0L, active4, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0L, active2, 0x8000000L, active3, 0x10000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(5, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1, active2, active3, active4);
      return 7;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(7, 42);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(7, 51);
         else if ((active2 & 0x80000L) != 0L)
            return jjStopAtPos(7, 147);
         else if ((active2 & 0x8000000L) != 0L)
            return jjStopAtPos(7, 155);
         else if ((active2 & 0x40000000L) != 0L)
            return jjStopAtPos(7, 158);
         else if ((active2 & 0x200000000L) != 0L)
            return jjStopAtPos(7, 161);
         else if ((active3 & 0x800L) != 0L)
            return jjStopAtPos(7, 203);
         else if ((active4 & 0x1000000L) != 0L)
            return jjStopAtPos(7, 280);
         break;
      case 68:
      case 100:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x80L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0x1000000000000000L, active3, 0L, active4, 0x44209L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x800000L, active4, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 77:
      case 109:
         if ((active3 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 232, 392);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x8000L);
      case 78:
      case 110:
         if ((active2 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 163, 297);
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000000000L, active1, 0x1000L, active2, 0L, active3, 0x4000000000000000L, active4, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0x1000400000L, active3, 0x800000000000000L, active4, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0x100L, active3, 0L, active4, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0x20L, active3, 0L, active4, 0x2L);
      case 83:
      case 115:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(7, 96, 184);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x200000000L, active2, 0L, active3, 0L, active4, 0x410L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L, active1, 0x2L, active2, 0L, active3, 0x100000000000000L, active4, 0x200000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0x200080L, active3, 0x400000000000000L, active4, 0L);
      case 88:
      case 120:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 37, 71);
         break;
      case 89:
      case 121:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x20000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(6, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1, active2, active3, active4);
      return 8;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(8, 45);
         else if ((active1 & 0x2L) != 0L)
            return jjStopAtPos(8, 65);
         else if ((active1 & 0x1000L) != 0L)
            return jjStopAtPos(8, 76);
         else if ((active2 & 0x20L) != 0L)
            return jjStopAtPos(8, 133);
         else if ((active2 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(8, 188);
         else if ((active3 & 0x800000L) != 0L)
            return jjStopAtPos(8, 215);
         else if ((active3 & 0x100000000000000L) != 0L)
            return jjStopAtPos(8, 248);
         else if ((active3 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(8, 254);
         else if ((active4 & 0x80L) != 0L)
            return jjStopAtPos(8, 263);
         else if ((active4 & 0x40000L) != 0L)
            return jjStopAtPos(8, 274);
         else if ((active4 & 0x200000L) != 0L)
            return jjStopAtPos(8, 277);
         break;
      case 65:
      case 97:
         if ((active4 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(8, 256, 440);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x8412L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x20000000000L, active4, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0L, active2, 0x1000000000L, active3, 0L, active4, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0L, active2, 0x80L, active3, 0L, active4, 0L);
      case 80:
      case 112:
         if ((active2 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(8, 149, 266);
         else if ((active3 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 250, 424);
         return jjMoveStringLiteralDfa9_0(active0, 0x1000000000000L, active1, 0L, active2, 0L, active3, 0L, active4, 0L);
      case 83:
      case 115:
         if ((active4 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(8, 270, 480);
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200000000L, active2, 0L, active3, 0L, active4, 0L);
      case 84:
      case 116:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 47, 97);
         else if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 62, 127);
         else if ((active4 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(8, 259, 449);
         else if ((active4 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(8, 265, 465);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0L, active2, 0x400100L, active3, 0x800000000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(7, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1, active2, active3, active4);
      return 9;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x200000000L) != 0L)
            return jjStopAtPos(9, 97);
         else if ((active2 & 0x1000000000L) != 0L)
            return jjStopAtPos(9, 164);
         else if ((active3 & 0x20000000000L) != 0L)
            return jjStopAtPos(9, 233);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x2L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0L, active2, 0x100L, active3, 0L, active4, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0L, active2, 0x400000L, active3, 0x800000000000000L, active4, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0L, active2, 0L, active3, 0L, active4, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, 0x1000000000000L, active1, 0L, active2, 0x80L, active3, 0L, active4, 0x410L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1, active2, active3, active4);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(8, old0, old1, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L, active2, active3, active4);
      return 10;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(10, 48);
         else if ((active2 & 0x400000L) != 0L)
            return jjStopAtPos(10, 150);
         else if ((active3 & 0x800000000000000L) != 0L)
            return jjStopAtPos(10, 251);
         else if ((active4 & 0x2L) != 0L)
            return jjStopAtPos(10, 257);
         else if ((active4 & 0x10L) != 0L)
            return jjStopAtPos(10, 260);
         else if ((active4 & 0x400L) != 0L)
            return jjStopAtPos(10, 266);
         else if ((active4 & 0x8000L) != 0L)
            return jjStopAtPos(10, 271);
         break;
      case 69:
      case 101:
         if ((active2 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(10, 135, 236);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active2, 0x100L, active3, 0L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L, active2, active3, active4);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0, long old2, long active2, long old3, long active3, long old4, long active4)
{
   if (((active0 &= old0) | (active2 &= old2) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_0(9, old0, 0L, old2, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, 0L, 0L, active2, 0L, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa12_0(active2, 0x100L);
      default :
         break;
   }
   return jjStartNfa_0(10, 0L, 0L, active2, 0L, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old2, long active2)
{
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_0(10, 0L, 0L, old2, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, 0L, 0L, active2, 0L, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 62:
         if ((active2 & 0x100L) != 0L)
            return jjStopAtPos(12, 136);
         break;
      default :
         break;
   }
   return jjStartNfa_0(11, 0L, 0L, active2, 0L, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 519;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x8fff5fda00000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     jjCheckNAdd(16);
                  }
                  else if ((0x100001200L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if (curChar == 60)
                     jjAddStates(0, 92);
                  else if (curChar == 34)
                     jjCheckNAddStates(93, 95);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(15);
                  }
                  else if (curChar == 35)
                     jjCheckNAdd(14);
                  else if (curChar == 46)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAddTwoStates(11, 12);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(96, 98);
                  break;
               case 80:
               case 203:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(203);
                  break;
               case 146:
               case 192:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAdd(192);
                  break;
               case 270:
               case 275:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 151)
                     kind = 151;
                  jjCheckNAdd(275);
                  break;
               case 76:
               case 317:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 177)
                     kind = 177;
                  jjCheckNAdd(317);
                  break;
               case 467:
               case 474:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 267)
                     kind = 267;
                  jjCheckNAdd(474);
                  break;
               case 519:
                  if ((0xfffffffb00000000L & l) != 0L)
                     jjCheckNAddStates(93, 95);
                  else if (curChar == 34)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(93, 95);
                  break;
               case 58:
                  if (curChar == 54)
                     jjCheckNAdd(181);
                  else if (curChar == 53)
                     jjCheckNAdd(178);
                  else if (curChar == 52)
                     jjCheckNAdd(175);
                  else if (curChar == 51)
                     jjCheckNAdd(172);
                  else if (curChar == 50)
                     jjCheckNAdd(169);
                  else if (curChar == 49)
                     jjCheckNAdd(166);
                  break;
               case 130:
               case 61:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(61);
                  break;
               case 63:
               case 319:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 180)
                     kind = 180;
                  jjCheckNAdd(319);
                  break;
               case 193:
               case 321:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 183)
                     kind = 183;
                  jjCheckNAdd(321);
                  break;
               case 287:
               case 308:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 168)
                     kind = 168;
                  jjCheckNAdd(308);
                  break;
               case 49:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 63)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 94:
               case 330:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjCheckNAdd(330);
                  break;
               case 140:
               case 509:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 281)
                     kind = 281;
                  jjCheckNAdd(509);
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(93, 95);
                  break;
               case 3:
                  if ((0xfffffffb00000000L & l) != 0L)
                     jjCheckNAddStates(93, 95);
                  break;
               case 4:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(93, 95);
                  break;
               case 5:
                  if (curChar == 34 && kind > 7)
                     kind = 7;
                  break;
               case 6:
                  if (curChar == 39)
                     jjCheckNAddStates(96, 98);
                  break;
               case 7:
                  if ((0xffffff7f00000000L & l) != 0L)
                     jjCheckNAddStates(96, 98);
                  break;
               case 8:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(96, 98);
                  break;
               case 9:
                  if (curChar == 39 && kind > 7)
                     kind = 7;
                  break;
               case 10:
                  if (curChar != 46)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(11, 12);
                  break;
               case 11:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 12:
                  if ((0x3ff400000000000L & l) != 0L && kind > 10)
                     kind = 10;
                  break;
               case 13:
                  if (curChar == 35)
                     jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(15);
                  break;
               case 16:
                  if ((0x8fff5fda00000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(16);
                  break;
               case 17:
                  if (curChar == 60)
                     jjAddStates(0, 92);
                  break;
               case 19:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(99, 100);
                  break;
               case 21:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(101, 102);
                  break;
               case 23:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 24:
                  if (curChar == 34)
                     jjCheckNAddStates(106, 108);
                  break;
               case 25:
                  if ((0xfffffffb00000000L & l) != 0L)
                     jjCheckNAddStates(106, 108);
                  break;
               case 26:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(106, 108);
                  break;
               case 27:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 28:
                  if (curChar == 62 && kind > 18)
                     kind = 18;
                  break;
               case 29:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(109, 113);
                  break;
               case 30:
                  if (curChar == 39)
                     jjCheckNAddStates(114, 116);
                  break;
               case 31:
                  if ((0xffffff7f00000000L & l) != 0L)
                     jjCheckNAddStates(114, 116);
                  break;
               case 32:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(114, 116);
                  break;
               case 33:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 34:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(34, 28);
                  break;
               case 51:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 63)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 56:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 66:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 71:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 79:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 84:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 90:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 97:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 106:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 112:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 117:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 122:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 127:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 136:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 143:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 149:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 152:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 159:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 165:
                  if (curChar == 49)
                     jjCheckNAdd(166);
                  break;
               case 166:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(166);
                  break;
               case 168:
                  if (curChar == 50)
                     jjCheckNAdd(169);
                  break;
               case 169:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(169);
                  break;
               case 171:
                  if (curChar == 51)
                     jjCheckNAdd(172);
                  break;
               case 172:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(172);
                  break;
               case 174:
                  if (curChar == 52)
                     jjCheckNAdd(175);
                  break;
               case 175:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  jjCheckNAdd(175);
                  break;
               case 177:
                  if (curChar == 53)
                     jjCheckNAdd(178);
                  break;
               case 178:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  jjCheckNAdd(178);
                  break;
               case 180:
                  if (curChar == 54)
                     jjCheckNAdd(181);
                  break;
               case 181:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAdd(181);
                  break;
               case 184:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 194:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 197:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 206:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 209:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 212:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 119)
                     kind = 119;
                  jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 216:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 221:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 125)
                     kind = 125;
                  jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 225:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 229:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 236:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 247:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 254:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 260:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 145)
                     kind = 145;
                  jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 266:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 148)
                     kind = 148;
                  jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 279:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 153)
                     kind = 153;
                  jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 285:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 156)
                     kind = 156;
                  jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 291:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 159)
                     kind = 159;
                  jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 297:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 305:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 165)
                     kind = 165;
                  jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 311:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 171)
                     kind = 171;
                  jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 314:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 174)
                     kind = 174;
                  jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 323:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 332:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 192)
                     kind = 192;
                  jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 336:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 195)
                     kind = 195;
                  jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 340:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 198)
                     kind = 198;
                  jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 344:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 201)
                     kind = 201;
                  jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 350:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 354:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 207)
                     kind = 207;
                  jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 358:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 210)
                     kind = 210;
                  jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 361:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 213)
                     kind = 213;
                  jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 368:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 216)
                     kind = 216;
                  jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 372:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 219)
                     kind = 219;
                  jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 377:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 222)
                     kind = 222;
                  jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 382:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 225)
                     kind = 225;
                  jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 387:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 228)
                     kind = 228;
                  jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 392:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 231)
                     kind = 231;
                  jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 400:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 234)
                     kind = 234;
                  jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 404:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 237)
                     kind = 237;
                  jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 408:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 240)
                     kind = 240;
                  jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 412:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 243)
                     kind = 243;
                  jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 417:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 246)
                     kind = 246;
                  jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 424:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 249)
                     kind = 249;
                  jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 433:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 252)
                     kind = 252;
                  jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 440:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 255)
                     kind = 255;
                  jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 449:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 258)
                     kind = 258;
                  jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 458:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 261)
                     kind = 261;
                  jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 465:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 264)
                     kind = 264;
                  jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 480:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 269)
                     kind = 269;
                  jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 489:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 272)
                     kind = 272;
                  jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 496:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 275)
                     kind = 275;
                  jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 503:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 278)
                     kind = 278;
                  jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 511:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 284)
                     kind = 284;
                  jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 515:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 287)
                     kind = 287;
                  jjstateSet[jjnewStateCnt++] = 515;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(16);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAddTwoStates(11, 12);
                  }
                  break;
               case 67:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 80:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 470:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 468:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 199:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 233:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 60:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 124:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 146:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 270:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 62:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 196:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 123:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 103:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 211:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 256:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 76:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 102:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 467:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 519:
               case 3:
                  jjCheckNAddStates(93, 95);
                  break;
               case 68:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 58:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 429:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 87:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 325:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 130:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 63:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 399;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 193:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 287:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 49:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 506;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 486;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 409;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 428:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  else if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 81:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 469:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 349:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 271:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 140:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 108:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  else if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 7:
                  jjAddStates(96, 98);
                  break;
               case 10:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(11, 12);
                  break;
               case 11:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 12:
                  if ((0x7fffffe07fffffeL & l) != 0L && kind > 10)
                     kind = 10;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(16);
                  break;
               case 18:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 20:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  jjAddStates(106, 108);
                  break;
               case 31:
                  jjAddStates(114, 116);
                  break;
               case 35:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 36:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 44:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 53:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 59:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 64:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 69:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 72:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 73:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 77:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 82:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 85:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 86:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 88:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 91:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 92:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 95:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 98:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 99:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 104:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 107:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 109:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 114:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 119:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 128:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 129:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 131:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 137:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 138:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 141:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 144:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 145:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 150:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 153:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 154:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 156:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 160:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 161:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 167:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 170:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 173:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 176:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 179:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 182:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 183:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 185:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 195:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 198:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 201:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 202:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 204:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 205:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 207:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 208:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 210:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 213:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 217:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 218:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 222:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 223:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 226:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 227:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 230:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 231:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 234:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 237:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 238:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 248:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 250:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 251:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 255:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 257:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 261:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 262:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 267:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 268:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 272:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 277:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 280:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 281:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 286:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 288:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 293:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 299:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 306:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 307:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 309:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 310:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 312:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 313:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 315:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 316:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 318:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 322:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 324:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 326:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 331:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 334:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 338:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 341:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 342:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 345:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 346:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 351:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 352:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 355:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 356:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 359:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 360:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 362:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 363:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 370:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 373:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 374:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 378:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 379:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 383:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 384:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 388:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 389:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 393:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 394:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 401:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 402:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 405:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 406:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 409:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 410:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 413:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 414:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 418:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 419:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 425:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 426:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 430:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 434:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 435:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 441:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 442:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 450:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 451:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 459:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 460:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 466:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 471:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 475:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 476:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 481:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 482:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 484:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 485:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 490:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 491:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 497:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 498:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if ((0x40000000400L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 504:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 505:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 507:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 508:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 510:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 512:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 513:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 516:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 517:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 518:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 16:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(16);
                  break;
               case 519:
               case 3:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(93, 95);
                  break;
               case 7:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(96, 98);
                  break;
               case 25:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(106, 108);
                  break;
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(114, 116);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 519 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40L) != 0L)
            return 2;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_1(0x40L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_1(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffdfffffffffffL & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                  }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffffdfffffffffffL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 4)
                     kind = 4;
                  break;
               case 2:
                  if (kind > 5)
                     kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 4)
                     kind = 4;
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 5)
                     kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   49, 54, 59, 64, 69, 77, 82, 88, 95, 104, 110, 115, 120, 125, 134, 141, 
   147, 150, 153, 157, 164, 167, 170, 173, 176, 179, 182, 190, 191, 195, 198, 201, 
   204, 207, 210, 214, 219, 223, 227, 234, 245, 246, 252, 258, 264, 273, 277, 283, 
   289, 295, 303, 306, 309, 312, 315, 316, 318, 320, 328, 329, 334, 338, 342, 348, 
   352, 356, 359, 366, 370, 375, 380, 385, 390, 398, 402, 406, 410, 415, 422, 431, 
   438, 447, 456, 463, 472, 478, 487, 494, 501, 507, 508, 513, 518, 3, 4, 5, 
   7, 8, 9, 19, 42, 21, 39, 23, 24, 30, 25, 26, 27, 23, 24, 30, 
   34, 28, 31, 32, 33, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\42", "\75", "\45", "\55", "\57", "\76", 
null, "\77\76", null, null, null, null, "\57\76", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffc1c81L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 
   0x1ffffffffL, 
};
static final long[] jjtoSkip = {
   0x7eL, 0x0L, 0x0L, 0x0L, 
   0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[519];
private final int[] jjstateSet = new int[1038];
protected char curChar;
/** Constructor. */
public ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 519; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
