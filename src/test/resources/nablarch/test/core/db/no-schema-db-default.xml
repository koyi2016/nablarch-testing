<?xml version="1.0" encoding="UTF-8"?>
<component-configuration xmlns="http://tis.co.jp/nablarch/component-configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration ../../main/resources/component-configuration.xsd">

  <!-- db接続情報設定ファイル(nablarch.db.schema が null) -->
  <config-file file="nablarch/test/core/db/no-schema-db.config" />
  <!-- データソース依存のコンポーネント定義 -->
  <import file="datasource.xml"/>
  <!--  SimpleDbTransactionManager  -->
  <component name="dbManager" class="nablarch.core.db.transaction.SimpleDbTransactionManager"/>
  <component name="testFwTran" class="nablarch.core.db.transaction.SimpleDbTransactionManager">
    <property name="dbTransactionName" value="test-fw"/>
  </component>

  <component name="testTran" class="nablarch.core.db.transaction.SimpleDbTransactionManager">
    <property name="dbTransactionName" value="test"/>
  </component>

  <!-- ConnectionFactoryの設定 -->
  <component name="connectionFactory" class="nablarch.core.db.connection.BasicDbConnectionFactoryForDataSource">
    <property name="dataSource" ref="dataSource" />
    <property name="statementReuse" value="true" />
    <property name="dbAccessExceptionFactory" ref="dbAccessExceptionFactory" />
    <property name="statementFactory" ref="statementFactory" />
    <property name="dialect" ref="dialect" />
  </component>

  <!-- TransactionFactoryの設定 -->
  <component name="transactionFactory" class="nablarch.core.db.transaction.JdbcTransactionFactory">
    <property name="isolationLevel" value="READ_COMMITTED" />
  </component>

  <!-- ステートメントの設定 -->
  <component name="statementFactory"
      class="nablarch.core.db.statement.BasicStatementFactory">
    <property name="fetchSize" value="50" />
    <property name="queryTimeout" value="600" />
    <property name="objectFieldCache" ref="statementValueObjectCache" />
    <property name="updatePreHookObjectHandlerList" ref="fieldAnnotationHandler" />
    <property name="sqlParameterParserFactory">
      <component class="nablarch.core.db.statement.BasicSqlParameterParserFactory" />
    </property>
    <property name="sqlStatementExceptionFactory" ref="dbExceptionFactory" />
    <property name="sqlLoader" ref="sqlLoader" />
  </component>

  <!-- SQLLoaderの設定 -->
  <component name="sqlLoader" class="nablarch.core.db.statement.BasicSqlLoader">
    <property name="fileEncoding" value="utf-8" />
    <property name="extension" value="sql" />
  </component>

  <!-- オブジェクトの情報のキャッシュ設定 -->
  <component name="statementValueObjectCache"
      class="nablarch.core.cache.BasicStaticDataCache">
    <property name="loader">
      <component
          class="nablarch.core.db.statement.autoproperty.FieldAndAnnotationLoader" />
    </property>
    <property name="loadOnStartup" value="false" />
  </component>

  <!-- ユーザID設定ハンドラ -->
  <component name="userIdAnnotationHandler"
      class="nablarch.core.db.statement.autoproperty.UserIdAnnotationHandler">
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- リクエストID設定ハンドラ -->
  <component name="requestIdAnnotationHandler"
      class="nablarch.core.db.statement.autoproperty.RequestIdAnnotationHandler">
    <property name="fieldAnnotationCache" ref="statementValueObjectCache" />
  </component>

  <!-- フィールドアノテーションハンドラの設定 -->
  <list name="fieldAnnotationHandler">
    <component-ref name="userIdAnnotationHandler" />
    <component-ref name="requestIdAnnotationHandler" />
  </list>

  <!-- フィールド情報ローダーの設定 -->
  <component name="fieldAnnotationCache" class="nablarch.core.cache.BasicStaticDataCache">
    <property name="loader">
      <component class="nablarch.core.db.statement.autoproperty.FieldAndAnnotationLoader" />
    </property>
    <property name="loadOnStartup" value="false" />
  </component>

  <!-- 初期化機能の設定 -->
  <component name="initializer" class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <component-ref name="fieldAnnotationCache" />
        <component-ref name="statementValueObjectCache" />
      </list>
    </property>
  </component>

</component-configuration>